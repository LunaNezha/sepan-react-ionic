/* Core CSS required for Ionic components to work properly */
@import "@ionic/react/css/core.css";

/* flaticon all package */
@import "@flaticon/flaticon-uicons/css/all/all";

/* font families */
@import "@assets/styles/font-families.css";

/* tailwind css files */
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /* theme variables */
  :root {
    --orange-50: theme(colors.orange.50);
    --orange-100: theme(colors.orange.100);
    --orange-200: theme(colors.orange.200);
    --orange-300: theme(colors.orange.300);
    --orange-400: theme(colors.orange.400);
    --orange-500: theme(colors.orange.500);
    --orange-600: theme(colors.orange.600);
    --orange-700: theme(colors.orange.700);
    --orange-800: theme(colors.orange.800);
    --orange-900: theme(colors.orange.900);
    --orange-950: theme(colors.orange.950);

    --amber-50: theme(colors.amber.50);
    --amber-100: theme(colors.amber.100);
    --amber-200: theme(colors.amber.200);
    --amber-300: theme(colors.amber.300);
    --amber-400: theme(colors.amber.400);
    --amber-500: theme(colors.amber.500);
    --amber-600: theme(colors.amber.600);
    --amber-700: theme(colors.amber.700);
    --amber-800: theme(colors.amber.800);
    --amber-900: theme(colors.amber.900);
    --amber-950: theme(colors.amber.950);

    --rose-50: theme(colors.rose.50);
    --rose-100: theme(colors.rose.100);
    --rose-200: theme(colors.rose.200);
    --rose-300: theme(colors.rose.300);
    --rose-400: theme(colors.rose.400);
    --rose-500: theme(colors.rose.500);
    --rose-600: theme(colors.rose.600);
    --rose-700: theme(colors.rose.700);
    --rose-800: theme(colors.rose.800);
    --rose-900: theme(colors.rose.900);
    --rose-950: theme(colors.rose.950);

    --violet-50: theme(colors.violet.50);
    --violet-100: theme(colors.violet.100);
    --violet-200: theme(colors.violet.200);
    --violet-300: theme(colors.violet.300);
    --violet-400: theme(colors.violet.400);
    --violet-500: theme(colors.violet.500);
    --violet-600: theme(colors.violet.600);
    --violet-700: theme(colors.violet.700);
    --violet-800: theme(colors.violet.800);
    --violet-900: theme(colors.violet.900);
    --violet-950: theme(colors.violet.950);

    --emerald-50: theme(colors.emerald.50);
    --emerald-100: theme(colors.emerald.100);
    --emerald-200: theme(colors.emerald.200);
    --emerald-300: theme(colors.emerald.300);
    --emerald-400: theme(colors.emerald.400);
    --emerald-500: theme(colors.emerald.500);
    --emerald-600: theme(colors.emerald.600);
    --emerald-700: theme(colors.emerald.700);
    --emerald-800: theme(colors.emerald.800);
    --emerald-900: theme(colors.emerald.900);
    --emerald-950: theme(colors.emerald.950);

    --blue-50: theme(colors.blue.50);
    --blue-100: theme(colors.blue.100);
    --blue-200: theme(colors.blue.200);
    --blue-300: theme(colors.blue.300);
    --blue-400: theme(colors.blue.400);
    --blue-500: theme(colors.blue.500);
    --blue-600: theme(colors.blue.600);
    --blue-700: theme(colors.blue.700);
    --blue-800: theme(colors.blue.800);
    --blue-900: theme(colors.blue.900);
    --blue-950: theme(colors.blue.950);

    --ebony-50: theme(colors.ebony.50);
    --ebony-100: theme(colors.ebony.100);
    --ebony-200: theme(colors.ebony.200);
    --ebony-300: theme(colors.ebony.300);
    --ebony-400: theme(colors.ebony.400);
    --ebony-500: theme(colors.ebony.500);
    --ebony-600: theme(colors.ebony.600);
    --ebony-700: theme(colors.ebony.700);
    --ebony-800: theme(colors.ebony.800);
    --ebony-900: theme(colors.ebony.900);
    --ebony-950: theme(colors.ebony.950);

    --big-stone-50: theme(colors.big-stone.50);
    --big-stone-100: theme(colors.big-stone.100);
    --big-stone-200: theme(colors.big-stone.200);
    --big-stone-300: theme(colors.big-stone.300);
    --big-stone-400: theme(colors.big-stone.400);
    --big-stone-500: theme(colors.big-stone.500);
    --big-stone-600: theme(colors.big-stone.600);
    --big-stone-700: theme(colors.big-stone.700);
    --big-stone-800: theme(colors.big-stone.800);
    --big-stone-900: theme(colors.big-stone.900);
    --big-stone-950: theme(colors.big-stone.950);

    --white-50: theme(colors.white.50);
    --white-100: theme(colors.white.100);
    --white-200: theme(colors.white.200);
    --white-300: theme(colors.white.300);
    --white-400: theme(colors.white.400);
    --white-500: theme(colors.white.500);
    --white-600: theme(colors.white.600);
    --white-700: theme(colors.white.700);
    --white-800: theme(colors.white.800);
    --white-900: theme(colors.white.900);
    --white-950: theme(colors.white.950);
  }

  body {
    @apply font-iranyekan-regular;
  }

  input {
    &:-webkit-autofill,
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus,
    &:-webkit-autofill:active,
    &:-internal-autofill-selected {
      box-shadow: 0 0 0 100px transparent inset;
      @apply !bg-transparent !text-blue-600;
    }

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    &[type="number"] {
      -moz-appearance: textfield;
    }
  }

  ion-content::part(background),
  ion-list,
  ion-item::part(native) {
    @apply bg-white-100 text-white-950 dark:bg-ebony-950 dark:text-white-200;
  }

  ion-menu {
    ion-content {
      &::part(background) {
        @apply bg-white-50 dark:bg-big-stone-950;
      }

      ion-item {
        --min-height: @apply min-h-auto;

        &:hover {
          i {
            @apply text-blue-600 duration-500 ease-out dark:text-blue-400;
          }
        }

        &::part(native) {
          @apply rounded-xl !bg-transparent px-5 py-4;
        }

        i {
          @apply text-xl duration-500 ease-out;
        }
      }
    }
  }

  ion-item,
  ion-label {
    @apply m-0 font-iranyekan-regular text-white-950 dark:text-white-200;
  }

  i {
    @apply flex;
  }

  ion-header {
    ion-toolbar {
      --border-width: 0 !important;
    }
  }

  ion-button {
    @apply m-0;
  }

  ion-tab-bar {
    ion-tab-button {
      --color-focused: var(--blue-400);
      --color-selected: var(--blue-400);
    }
  }

  ion-popover {
    &::part(arrow)::after {
      @apply bg-white-50 dark:bg-big-stone-950;
    }
  }

  ion-breadcrumbs {
    ion-breadcrumb {
      @apply partNative:px-1 partNative:py-1 partNative:text-xs partNative:text-white-950 partCollapsedIndicator:bg-white-50 partNative:dark:text-white-200 partCollapsedIndicator:dark:bg-big-stone-950;

      &:not(:last-child) {
        @apply partNative:font-iranyekan-regular partNative:opacity-40;
      }

      &:last-child {
        @apply partNative:font-iranyekan-bold;
      }
    }
  }
}

@layer components {
  .btn {
    @apply shadow duration-300 ease-in;

    &::part(native) {
      --background-hover: transparent;
      --background-activated: transparent;
      --background-focused: transparent;
      @apply duration-300 ease-in;
    }

    &:hover {
      @apply shadow-lg duration-300 ease-in;

      &::part(native) {
        @apply duration-300 ease-in;
      }
    }
  }

  .theme-btn {
    @apply min-h-auto w-auto rounded-xl text-sm text-white-400 shadow-none dark:text-white-200;

    &::part(native) {
      @apply min-h-auto w-7 bg-transparent p-0;
    }

    &:hover {
      @apply text-orange-400 shadow-none;
    }
  }

  .shadows {
    @apply shadow duration-500 ease-in-out hover:shadow-md dark:shadow-lg hover:dark:shadow-2xl;
  }

  .badge {
    @apply flex items-center gap-1 rounded-lg px-2 py-1 font-iranyekan-regular text-xs;
  }

  .badge-danger {
    @apply bg-rose-400/10 text-rose-400;
  }

  .badge-success {
    @apply bg-emerald-400/10 text-emerald-400;
  }

  .page-header {
    @apply flex flex-wrap items-center justify-between gap-4;
  }
}

.recharts-wrapper {
  svg.recharts-surface {
    @apply w-full;
  }
}

ion-alert {
  .alert-wrapper {
    @apply bg-white-50 dark:bg-big-stone-950;

    .alert-head {
      h2 {
        @apply font-iranyekan-bold text-lg text-white-950 dark:text-white-200;
      }
    }

    .alert-radio-group {
      button {
        @apply px-6 py-1;

        .alert-radio-label {
          @apply p-0 font-iranyekan-bold;
        }

        &[aria-checked="false"] {
          .alert-radio-label {
            @apply text-white-950 dark:text-white-200;
          }
        }

        &[aria-checked="true"] {
          .alert-radio-label {
            @apply text-emerald-400;
          }

          .alert-radio-icon .alert-radio-inner {
            @apply border-emerald-400;
          }
        }
      }
    }
  }
}

.notistack-MuiContent-error,
.notistack-MuiContent-info,
.notistack-MuiContent-warning,
.notistack-MuiContent-success {
  @apply flex justify-between gap-4 rounded-xl bg-white-50 px-6 py-4 text-white-950 dark:bg-ebony-950 dark:text-white-200;

  #notistack-snackbar {
    @apply flex items-center gap-2 p-0;
  }

  div:last-child {
    @apply m-0 p-0;

    button {
      @apply transition-all;

      &:hover {
        @apply text-rose-400 transition-all;
      }
    }
  }
}
